var h=Object.defineProperty;var C=(s,e,i)=>e in s?h(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i;var v=(s,e,i)=>C(s,typeof e!="symbol"?e+"":e,i);const b="vampire-20-exp-counter",q=b,K={talent:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},skill:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},knowledge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},alertness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},art:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},athletics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},awareness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},brawl:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},dodge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},empathy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},expression:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intimidation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intuition:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},kenning:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},leadership:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},persuasion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},primalurge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},streetwise:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},subterfuge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},animalken:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},craft:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},demolitions:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},drive:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},etiquette:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},firearms:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},larceny:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},martialarts:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},meditation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},melee:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},performance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},security:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},stealth:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},survival:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},academics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},bureaucracy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},computer:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},cosmology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},enigmas:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},esoterica:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},finance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},gremayre:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},investigation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},law:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},linguistics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},medicine:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},occult:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},politics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},religion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},research:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},rituals:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},science:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},technology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3}},d={strength:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},dexterity:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},stamina:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},charisma:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},manipulation:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},appearance:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},composure:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},perception:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},intelligence:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},wits:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},resolve:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0}},g={conscience:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},courage:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},selfcontrol:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0}},f={path:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0},willpower:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0}},x={"wod.types.discipline":{multiplier:5,path:[],key:"value",acquisitionCost:10},"wod.types.disciplinepath":{multiplier:4,path:[],key:"value",acquisitionCost:7}},c={...K,...d,...g,...f,...x},y=Object.values(c),m=[];for(let s=0;s<y.length;s++)y[s].path.forEach(i=>{m.includes(i)||m.push(i)});class w{constructor(){v(this,"previousActor",null);v(this,"previousItem",null)}maybeAddItemExperienceCost(e,i,a){if(!this.previousItem)return;const t=i.system.type,l=c[t];if(!l)throw new Error(`Property ${t} not found in propertiesMap`);const u=l.key,o=this.previousItem.system[u],r=e.system.value,n=this.calcExperienceCost({property:t,oldValue:o,newValue:r});this.createExperienceItem({amount:n,property:i.name,oldValue:o,newValue:r},a)}maybeAddExperienceCost(e,i){const a=this.searchPropertyRecursively(e);a&&this.updateAttribute(e,i,a)}updateAttribute(e,i,a){if(!this.previousActor)return;const t=this.getValuesChanged(e,this.previousActor,a),l=this.calcExperienceCost(t);this.createExperienceItem({amount:l,...t},i)}getValuesChanged(e,i,a){const t=a,l=c[t];if(!l)throw new Error(`Property ${t} not found in propertiesMap`);const u=l.path,o=l.valueKey,{oldValue:r,newValue:n}=this.getOldAndNewValueFromActorProperty(e,i,u,t,o);return{property:t,oldValue:r,newValue:n}}getOldAndNewValueFromActorProperty(e,i,a,t,l){const u=this.getValueFromByPath(i.system,a,t,l),o=this.getValueFromByPath(e.system,a,t,l);return{oldValue:u,newValue:o}}getValueFromByPath(e,i,a,t){return i.length===1?e[i[0]][a][t]:e[i[0]][i[1]][a][t]}calcExperienceCost({oldValue:e,newValue:i,property:a}){const{multiplier:t,acquisitionCost:l}=c[a],u=this.sumExperienceCost(e,i,t,l);return u===0?l:u}sumExperienceCost(e,i,a,t){const l=i>e,u=Math.abs(i-e);let o=l?e:i,r=0;for(let n=0;n<u;n++)o===0?r+=t:(r+=o*a,o++);return r}createExperienceItem({amount:e,property:i,oldValue:a,newValue:t},l){const u=t>a,o=u?"wod.types.expspent":"wod.types.expgained";l.createEmbeddedDocuments("Item",[{name:"Gasto exp",type:"Experience",system:{iscreated:!0,isactive:!1,isvisible:!0,version:"4.1.5",parentid:"",worldanvil:"",reference:"",description:`${i} de ${a} a ${t}`,details:"",property:[],bonuslist:[],isspent:u,amount:e,type:o},img:"icons/svg/item-bag.svg",effects:[],folder:null,sort:0}])}storeActor(e){this.previousActor={...e}}searchPropertyRecursively(e){const i=e.system;console.log("object",i);const a=Object.keys(i).find(l=>(console.log("key",l),m.includes(l)));if(console.log("group",a),!a)throw Error("Property key not found");const t=Object.keys(i[a])[0];if(console.log("key",t),c[t])return t;{const l={system:i[a]};return console.log("newChanged",l),this.searchPropertyRecursively(l)}}storeItem(e){this.previousItem={...e}}}let p;Hooks.once("init",()=>{p=game.modules.get(q),p.experienceCounter=new w});Hooks.on("updateItem",(s,e)=>{p.experienceCounter.maybeAddItemExperienceCost(e,s,s.parent)});Hooks.on("updateActor",(s,e)=>{p.experienceCounter.maybeAddExperienceCost(e,s)});Hooks.on("preUpdateActor",s=>{p.experienceCounter.storeActor(s)});Hooks.on("preUpdateItem",s=>{p.experienceCounter.storeItem(s)});
//# sourceMappingURL=module.js.map
