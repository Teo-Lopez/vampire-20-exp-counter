var C=Object.defineProperty;var b=(l,u,e)=>u in l?C(l,u,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[u]=e;var m=(l,u,e)=>b(l,typeof u!="symbol"?u+"":u,e);const q="vampire-20-exp-counter",K=q,d={talent:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},skill:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},knowledge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},alertness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},art:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},athletics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},awareness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},brawl:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},dodge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},empathy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},expression:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intimidation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intuition:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},kenning:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},leadership:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},persuasion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},primalurge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},streetwise:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},subterfuge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},animalken:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},craft:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},demolitions:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},drive:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},etiquette:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},firearms:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},larceny:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},martialarts:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},meditation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},melee:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},performance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},security:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},stealth:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},survival:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},academics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},bureaucracy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},computer:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},cosmology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},enigmas:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},esoterica:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},finance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},gremayre:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},investigation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},law:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},linguistics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},medicine:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},occult:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},politics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},religion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},research:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},rituals:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},science:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},technology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3}},g={strength:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},dexterity:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},stamina:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},charisma:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},manipulation:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},appearance:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},composure:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},perception:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},intelligence:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},wits:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},resolve:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0}},f={conscience:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},courage:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},selfcontrol:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0}},x={path:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0},willpower:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0}},w={"wod.types.discipline":{multiplier:5,path:[],key:"value",acquisitionCost:10},"wod.types.disciplinepath":{multiplier:4,path:[],key:"value",acquisitionCost:7}},v={...d,...g,...f,...x,...w},h=Object.values(v),y=[];for(let l=0;l<h.length;l++)h[l].path.forEach(e=>{y.includes(e)||y.push(e)});class A extends Application{constructor(){super(...arguments);m(this,"previousActor",null);m(this,"previousItem",null)}maybeAddItemExperienceCost(e,t,a){if(!this.previousItem)return;const i=t.system.type,s=v[i];if(!s)throw new Error(`Property ${i} not found in propertiesMap`);const o=s.key,r=this.previousItem.system[o],n=e.system.value,p=this.calcExperienceCost({property:i,oldValue:r,newValue:n});this.createExperienceItem({amount:p,property:t.name,oldValue:r,newValue:n},a)}maybeAddExperienceCost(e,t){const a=this.searchPropertyRecursively(e);a&&this.updateAttribute(e,t,a)}updateAttribute(e,t,a){if(!this.previousActor)return;const i=this.getValuesChanged(e,this.previousActor,a),s=this.calcExperienceCost(i);this.createExperienceItem({amount:s,...i},t)}getValuesChanged(e,t,a){const i=a,s=v[i];if(!s)throw new Error(`Property ${i} not found in propertiesMap`);const o=s.path,r=s.valueKey,{oldValue:n,newValue:p}=this.getOldAndNewValueFromActorProperty(e,t,o,i,r);return{property:i,oldValue:n,newValue:p}}getOldAndNewValueFromActorProperty(e,t,a,i,s){const o=this.getValueFromByPath(t.system,a,i,s),r=this.getValueFromByPath(e.system,a,i,s);return{oldValue:o,newValue:r}}getValueFromByPath(e,t,a,i){return t.length===1?e[t[0]][a][i]:e[t[0]][t[1]][a][i]}calcExperienceCost({oldValue:e,newValue:t,property:a}){const{multiplier:i,acquisitionCost:s}=v[a],o=this.sumExperienceCost(e,t,i,s);return o===0?s:o}sumExperienceCost(e,t,a,i){const s=t>e,o=Math.abs(t-e);let r=s?e:t,n=0;for(let p=0;p<o;p++)r===0?n+=i:(n+=r*a,r++);return n}createExperienceItem({amount:e,property:t,oldValue:a,newValue:i},s){const o=i>a,r=o?"wod.types.expspent":"wod.types.expgained";s.createEmbeddedDocuments("Item",[{name:"Gasto exp",type:"Experience",system:{iscreated:!0,isactive:!1,isvisible:!0,version:"4.1.5",parentid:"",worldanvil:"",reference:"",description:`${t} de ${a} a ${i}`,details:"",property:[],bonuslist:[],isspent:o,amount:e,type:r},img:"icons/svg/item-bag.svg",effects:[],folder:null,sort:0}])}storeActor(e){this.previousActor={...e}}searchPropertyRecursively(e){const t=e.system,a=Object.keys(t).find(i=>y.includes(i));if(!a)throw Error("Property key not found");if(v[a])return a;{const i={system:t[a]};return this.searchPropertyRecursively(i)}}storeItem(e){this.previousItem={...e}}}let c;Hooks.once("init",()=>{c=game.modules.get(K),c.experienceCounter=new A});Hooks.on("updateItem",(l,u)=>{c.experienceCounter.maybeAddItemExperienceCost(u,l,l.parent)});Hooks.on("updateActor",(l,u)=>{c.experienceCounter.maybeAddExperienceCost(u,l)});Hooks.on("preUpdateActor",l=>{c.experienceCounter.storeActor(l)});Hooks.on("preUpdateItem",l=>{c.experienceCounter.storeItem(l)});
//# sourceMappingURL=module.js.map
