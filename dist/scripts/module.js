var C=Object.defineProperty;var b=(l,e,i)=>e in l?C(l,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):l[e]=i;var v=(l,e,i)=>b(l,typeof e!="symbol"?e+"":e,i);const d="vampire-20-exp-counter",q=d,K={talent:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},skill:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},knowledge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},alertness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},art:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},athletics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},awareness:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},brawl:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},dodge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},empathy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},expression:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intimidation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},intuition:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},kenning:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},leadership:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},persuasion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},primalurge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},streetwise:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},subterfuge:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},animalken:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},craft:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},demolitions:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},drive:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},etiquette:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},firearms:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},larceny:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},martialarts:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},meditation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},melee:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},performance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},security:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},stealth:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},survival:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},academics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},bureaucracy:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},computer:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},cosmology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},enigmas:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},esoterica:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},finance:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},gremayre:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},investigation:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},law:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},linguistics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},medicine:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},occult:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},politics:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},religion:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},research:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},rituals:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},science:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3},technology:{multiplier:2,path:["abilities"],valueKey:"value",acquisitionCost:3}},g={strength:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},dexterity:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},stamina:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},charisma:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},manipulation:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},appearance:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},composure:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},perception:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},intelligence:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},wits:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0},resolve:{multiplier:4,path:["attributes"],valueKey:"value",acquisitionCost:0}},f={conscience:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},courage:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0},selfcontrol:{multiplier:2,path:["advantages","virtues"],valueKey:"permanent",acquisitionCost:0}},x={path:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0},willpower:{multiplier:2,path:["advantages"],valueKey:"permanent",acquisitionCost:0}},w={"wod.types.discipline":{multiplier:5,path:[],key:"value",acquisitionCost:10},"wod.types.disciplinepath":{multiplier:4,path:[],key:"value",acquisitionCost:7}},c={...K,...g,...f,...x,...w},y=Object.values(c),m=[];for(let l=0;l<y.length;l++)y[l].path.forEach(i=>{m.includes(i)||m.push(i)});class k{constructor(){v(this,"previousActor",null);v(this,"previousItem",null)}maybeAddItemExperienceCost(e,i,t){if(!this.previousItem)return;const a=i.system.type,s=c[a];if(!s)throw new Error(`Property ${a} not found in propertiesMap`);const u=s.key,o=this.previousItem.system[u],r=e.system.value,n=this.calcExperienceCost({property:a,oldValue:o,newValue:r});this.createExperienceItem({amount:n,property:i.name,oldValue:o,newValue:r},t)}maybeAddExperienceCost(e,i){const t=this.searchPropertyRecursively(e);t&&this.updateAttribute(e,i,t)}updateAttribute(e,i,t){if(!this.previousActor)return;const a=this.getValuesChanged(e,this.previousActor,t),s=this.calcExperienceCost(a);this.createExperienceItem({amount:s,...a},i)}getValuesChanged(e,i,t){const a=t,s=c[a];if(!s)throw new Error(`Property ${a} not found in propertiesMap`);const u=s.path,o=s.valueKey,{oldValue:r,newValue:n}=this.getOldAndNewValueFromActorProperty(e,i,u,a,o);if(!r||!n)throw new Error("Old or new value not found");return{property:a,oldValue:r,newValue:n}}getOldAndNewValueFromActorProperty(e,i,t,a,s){const u=this.getValueFromByPath(i.system,t,a,s),o=this.getValueFromByPath(e.system,t,a,s);return{oldValue:u,newValue:o}}getValueFromByPath(e,i,t,a){return i.length===1?e[i[0]][t][a]:e[i[0]][i[1]][t][a]}calcExperienceCost({oldValue:e,newValue:i,property:t}){const{multiplier:a,acquisitionCost:s}=c[t],u=this.sumExperienceCost(e,i,a,s);return u===0?s:u}sumExperienceCost(e,i,t,a){const s=i>e,u=Math.abs(i-e);let o=s?e:i,r=0;for(let n=0;n<u;n++)o===0?r+=a:(r+=o*t,o++);return r}createExperienceItem({amount:e,property:i,oldValue:t,newValue:a},s){const u=a>t,o=u?"wod.types.expspent":"wod.types.expgained";s.createEmbeddedDocuments("Item",[{name:"Gasto exp",type:"Experience",system:{iscreated:!0,isactive:!1,isvisible:!0,version:"4.1.5",parentid:"",worldanvil:"",reference:"",description:`${i} de ${t} a ${a}`,details:"",property:[],bonuslist:[],isspent:u,amount:e,type:o},img:"icons/svg/item-bag.svg",effects:[],folder:null,sort:0}])}storeActor(e){this.previousActor={...e}}searchPropertyRecursively(e){const i=e.system;console.log("object",i);const t=Object.keys(i).find(s=>(console.log("key",s),m.includes(s)));if(console.log("group",t),!t)throw Error("Property key not found");const a=Object.keys(i[t])[0];if(console.log("key",a),c[a])return a;{const s={system:i[t]};return console.log("newChanged",s),this.searchPropertyRecursively(s)}}storeItem(e){this.previousItem={...e}}}let p;Hooks.once("init",()=>{p=game.modules.get(q),p.experienceCounter=new k});Hooks.on("renderActorSheet",(l,e)=>{const i=l.actor,t=$(`
    <div class="form-group">
      <label>Deshabilitar registro autom√°tico de exp</label>
      <input type="checkbox" name="flags.experienceCounter.disabled" ${getProperty(i,"flags.experienceCounter.disabled")?"checked":""}/>
    </div>
  `);e.find(".note").prepend(t)});const h=l=>!getProperty(l,"flags.experienceCounter.disabled");Hooks.on("updateItem",(l,e)=>{h(l.parent)&&p.experienceCounter.maybeAddItemExperienceCost(e,l,l.parent)});Hooks.on("updateActor",(l,e)=>{h(l)&&p.experienceCounter.maybeAddExperienceCost(e,l)});Hooks.on("preUpdateActor",l=>{p.experienceCounter.storeActor(l)});Hooks.on("preUpdateItem",l=>{p.experienceCounter.storeItem(l)});
//# sourceMappingURL=module.js.map
