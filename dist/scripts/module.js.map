{"version":3,"file":"module.js","sources":["../../src/ts/constants.ts","../../src/ts/apps/experienceCounter.ts","../../src/ts/module.ts"],"sourcesContent":["import { id } from '../module.json'\r\n// Paths\r\n// abilities.key.value\r\n// attributes.key.value\r\n// advantages.virtues.key.permanent\r\n// advantages.key.permanent\r\n// advantages.key.permanent\r\nexport const moduleId = id\r\nconst abilities = {\r\n  talent: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  skill: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  knowledge: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  alertness: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  art: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  athletics: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  awareness: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  brawl: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  dodge: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  empathy: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  expression: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  intimidation: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  intuition: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  kenning: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  leadership: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  persuasion: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  primalurge: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  streetwise: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  subterfuge: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  animalken: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  craft: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  demolitions: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  drive: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  etiquette: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  firearms: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  larceny: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  martialarts: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  meditation: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  melee: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  performance: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  security: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  stealth: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  survival: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  academics: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  bureaucracy: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  computer: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  cosmology: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  enigmas: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  esoterica: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  finance: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  gremayre: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  investigation: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  law: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  linguistics: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  medicine: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  occult: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  politics: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  religion: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  research: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  rituals: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  science: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n  technology: {\r\n    multiplier: 2,\r\n    path: ['abilities'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 3,\r\n  },\r\n}\r\n\r\nconst attributes = {\r\n  strength: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  dexterity: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  stamina: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  charisma: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  manipulation: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  appearance: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  composure: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  perception: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  intelligence: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  wits: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n  resolve: {\r\n    multiplier: 4,\r\n    path: ['attributes'],\r\n    valueKey: 'value',\r\n    acquisitionCost: 0,\r\n  },\r\n}\r\n\r\nconst virtues = {\r\n  conscience: {\r\n    multiplier: 2,\r\n    path: ['advantages', 'virtues'],\r\n    valueKey: 'permanent',\r\n    acquisitionCost: 0,\r\n  },\r\n  courage: {\r\n    multiplier: 2,\r\n    path: ['advantages', 'virtues'],\r\n    valueKey: 'permanent',\r\n    acquisitionCost: 0,\r\n  },\r\n  selfcontrol: {\r\n    multiplier: 2,\r\n    path: ['advantages', 'virtues'],\r\n    valueKey: 'permanent',\r\n    acquisitionCost: 0,\r\n  },\r\n}\r\n\r\nconst otherProperties = {\r\n  path: {\r\n    multiplier: 2,\r\n    path: ['advantages'],\r\n    valueKey: 'permanent',\r\n    acquisitionCost: 0,\r\n  },\r\n  willpower: {\r\n    multiplier: 2,\r\n    path: ['advantages'],\r\n    valueKey: 'permanent',\r\n    acquisitionCost: 0,\r\n  },\r\n}\r\n\r\nconst itemProperties = {\r\n  'wod.types.discipline': {\r\n    multiplier: 5,\r\n    path: [],\r\n    key: 'value',\r\n    acquisitionCost: 10,\r\n  },\r\n  'wod.types.disciplinepath': {\r\n    multiplier: 4,\r\n    path: [],\r\n    key: 'value',\r\n    acquisitionCost: 7,\r\n  },\r\n}\r\n\r\nconst propertiesMap: Record<string, any> = {\r\n  ...abilities,\r\n  ...attributes,\r\n  ...virtues,\r\n  ...otherProperties,\r\n  ...itemProperties,\r\n}\r\n\r\nconst allPaths = Object.values(propertiesMap)\r\nconst validPaths: string[] = []\r\n\r\nfor (let i = 0; i < allPaths.length; i++) {\r\n  const currentPathArray = allPaths[i].path\r\n  currentPathArray.forEach((pathPortion: string) => {\r\n    if (!validPaths.includes(pathPortion)) validPaths.push(pathPortion)\r\n  })\r\n}\r\n\r\nexport { validPaths, propertiesMap }\r\n","import { propertiesMap, validPaths } from '../constants'\r\nimport { Changed } from '../module'\r\n\r\ninterface AttributeChange {\r\n  property: string\r\n  oldValue: number\r\n  newValue: number\r\n  amount?: number\r\n}\r\n\r\nexport default class ExperienceCounter {\r\n  previousActor: Actor | null = null\r\n  previousItem: Item | null = null\r\n\r\n  maybeAddItemExperienceCost(changed: Changed, item: Item, parent: Actor) {\r\n    if (!this.previousItem) return\r\n\r\n    const property = (item.system as Record<string, any>).type\r\n    const propertyConfig = propertiesMap[property]\r\n    if (!propertyConfig) {\r\n      throw new Error(`Property ${property} not found in propertiesMap`)\r\n    }\r\n    const key: string = propertyConfig.key\r\n\r\n    const oldValue = (this.previousItem.system as Record<string, any>)[key]\r\n    const newValue = changed.system.value\r\n\r\n    const amount = this.calcExperienceCost({\r\n      property,\r\n      oldValue,\r\n      newValue,\r\n    })\r\n\r\n    this.createExperienceItem(\r\n      { amount, property: item.name, oldValue, newValue },\r\n      parent\r\n    )\r\n  }\r\n\r\n  maybeAddExperienceCost(changed: Changed, actor: Actor) {\r\n    const property = this.searchPropertyRecursively(changed)\r\n\r\n    if (property) {\r\n      this.updateAttribute(changed, actor, property)\r\n    }\r\n  }\r\n\r\n  updateAttribute(changed: Changed, actor: Actor, property: string) {\r\n    if (!this.previousActor) return\r\n\r\n    const attributeChangeData = this.getValuesChanged(\r\n      changed,\r\n      this.previousActor,\r\n      property\r\n    )\r\n    const amount = this.calcExperienceCost(attributeChangeData)\r\n\r\n    this.createExperienceItem({ amount, ...attributeChangeData }, actor)\r\n  }\r\n\r\n  getValuesChanged(\r\n    changed: Changed,\r\n    previousActor: Actor,\r\n    knownProperty: string\r\n  ): AttributeChange {\r\n    const property = knownProperty\r\n    const propertyConfig = propertiesMap[property]\r\n\r\n    if (!propertyConfig) {\r\n      throw new Error(`Property ${property} not found in propertiesMap`)\r\n    }\r\n\r\n    const groupPath = propertyConfig.path\r\n    const valueKey = propertyConfig.valueKey\r\n\r\n    const { oldValue, newValue } = this.getOldAndNewValueFromActorProperty(\r\n      changed,\r\n      previousActor,\r\n      groupPath,\r\n      property,\r\n      valueKey\r\n    )\r\n\r\n    return {\r\n      property,\r\n      oldValue,\r\n      newValue,\r\n    }\r\n  }\r\n\r\n  private getOldAndNewValueFromActorProperty(\r\n    changed: Changed,\r\n    previousActor: Actor,\r\n    groupPath: string[],\r\n    property: string,\r\n    valueKey: string\r\n  ) {\r\n    const oldValue = this.getValueFromByPath(\r\n      previousActor.system,\r\n      groupPath,\r\n      property,\r\n      valueKey\r\n    )\r\n    const newValue = this.getValueFromByPath(\r\n      changed.system,\r\n      groupPath,\r\n      property,\r\n      valueKey\r\n    )\r\n    return { oldValue, newValue }\r\n  }\r\n\r\n  private getValueFromByPath(\r\n    system: Record<string, any>,\r\n    groupPath: string[],\r\n    property: string,\r\n    valueKey: string\r\n  ): number {\r\n    // Navigate through the paths to get the values based on the path from propertiesMap\r\n    if (groupPath.length === 1) {\r\n      return system[groupPath[0]][property][valueKey]\r\n    }\r\n    return system[groupPath[0]][groupPath[1]][property][valueKey]\r\n  }\r\n\r\n  calcExperienceCost({ oldValue, newValue, property }: AttributeChange) {\r\n    const { multiplier, acquisitionCost } = propertiesMap[property]\r\n\r\n    const amount = this.sumExperienceCost(\r\n      oldValue,\r\n      newValue,\r\n      multiplier,\r\n      acquisitionCost\r\n    )\r\n    return amount === 0 ? acquisitionCost : amount\r\n  }\r\n\r\n  sumExperienceCost(\r\n    oldValue: number,\r\n    newValue: number,\r\n    multiplier: number,\r\n    acquisitionCost: number\r\n  ) {\r\n    const isIncrease = newValue > oldValue\r\n    const difference = Math.abs(newValue - oldValue)\r\n    let baseCost = isIncrease ? oldValue : newValue\r\n    let totalCost = 0\r\n    for (let i = 0; i < difference; i++) {\r\n      if (baseCost === 0) {\r\n        totalCost += acquisitionCost\r\n      } else {\r\n        totalCost += baseCost * multiplier\r\n        baseCost++\r\n      }\r\n    }\r\n    return totalCost\r\n  }\r\n\r\n  createExperienceItem(\r\n    { amount, property, oldValue, newValue }: AttributeChange,\r\n    actor: Actor\r\n  ) {\r\n    const isIncrease = newValue > oldValue\r\n    const type = isIncrease ? 'wod.types.expspent' : 'wod.types.expgained'\r\n    actor.createEmbeddedDocuments('Item', [\r\n      {\r\n        name: 'Gasto exp',\r\n        type: 'Experience' as 'base',\r\n        system: {\r\n          iscreated: true,\r\n          isactive: false,\r\n          isvisible: true,\r\n          version: '4.1.5',\r\n          parentid: '',\r\n          worldanvil: '',\r\n          reference: '',\r\n          description: `${property} de ${oldValue} a ${newValue}`,\r\n          details: '',\r\n          property: [],\r\n          bonuslist: [],\r\n          isspent: isIncrease,\r\n          amount: amount,\r\n          type,\r\n        },\r\n        img: 'icons/svg/item-bag.svg',\r\n        effects: [],\r\n        folder: null,\r\n        sort: 0,\r\n      },\r\n    ])\r\n  }\r\n\r\n  storeActor(actor: Actor) {\r\n    this.previousActor = { ...actor } as Actor\r\n  }\r\n\r\n  private searchPropertyRecursively(changed: Record<string, any>): string {\r\n    const object = changed.system\r\n    console.log('object', object)\r\n    const group: string | undefined = Object.keys(object).find((key) => {\r\n      console.log('key', key)\r\n      return validPaths.includes(key)\r\n    })\r\n    console.log('group', group)\r\n    if (!group) throw Error('Property key not found')\r\n    const key = Object.keys(object[group])[0]\r\n    console.log('key', key)\r\n\r\n    if (!propertiesMap[key]) {\r\n      const newChanged = { system: object[group] }\r\n      console.log('newChanged', newChanged)\r\n      return this.searchPropertyRecursively(newChanged)\r\n    } else return key\r\n  }\r\n\r\n  storeItem(item: Item) {\r\n    this.previousItem = { ...item } as Item\r\n  }\r\n}\r\n","// Do not remove this import. If you do Vite will think your styles are dead\r\n// code and not include them in the build output.\r\nimport '../styles/style.scss'\r\nimport ExperienceCounter from './apps/experienceCounter'\r\nimport { moduleId } from './constants'\r\nimport { MyModule } from './types'\r\n\r\nexport interface Changed {\r\n  system: Record<string, any>\r\n  _id: string\r\n}\r\n\r\nlet module: MyModule\r\n\r\nHooks.once('init', () => {\r\n  module = (game as Game).modules.get(moduleId) as unknown as MyModule\r\n  module.experienceCounter = new ExperienceCounter()\r\n})\r\n\r\nHooks.on('updateItem', (item: Item, changed: Changed) => {\r\n  module.experienceCounter.maybeAddItemExperienceCost(\r\n    changed,\r\n    item,\r\n    item.parent\r\n  )\r\n})\r\n\r\nHooks.on('updateActor', (actor: Actor, changed: Changed) => {\r\n  module.experienceCounter.maybeAddExperienceCost(changed, actor)\r\n})\r\n\r\nHooks.on('preUpdateActor', (actor: Actor) => {\r\n  module.experienceCounter.storeActor(actor)\r\n})\r\n\r\nHooks.on('preUpdateItem', (item: Item) => {\r\n  module.experienceCounter.storeItem(item)\r\n})\r\n"],"names":["moduleId","id","abilities","attributes","virtues","otherProperties","itemProperties","propertiesMap","allPaths","validPaths","i","pathPortion","ExperienceCounter","__publicField","changed","item","parent","property","propertyConfig","key","oldValue","newValue","amount","actor","attributeChangeData","previousActor","knownProperty","groupPath","valueKey","system","multiplier","acquisitionCost","isIncrease","difference","baseCost","totalCost","type","object","group","newChanged","module"],"mappings":"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"}